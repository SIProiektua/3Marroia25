
package service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FlightManagerInterface", targetNamespace = "http://businessLogic/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FlightManagerInterface {


    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllDepartingCities", targetNamespace = "http://businessLogic/", className = "service.GetAllDepartingCities")
    @ResponseWrapper(localName = "getAllDepartingCitiesResponse", targetNamespace = "http://businessLogic/", className = "service.GetAllDepartingCitiesResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/getAllDepartingCitiesRequest", output = "http://businessLogic/FlightManagerInterface/getAllDepartingCitiesResponse")
    public List<String> getAllDepartingCities();

    /**
     * 
     * @return
     *     returns java.util.List<service.ConcreteFlight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getConcreteFlightsList", targetNamespace = "http://businessLogic/", className = "service.GetConcreteFlightsList")
    @ResponseWrapper(localName = "getConcreteFlightsListResponse", targetNamespace = "http://businessLogic/", className = "service.GetConcreteFlightsListResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/getConcreteFlightsListRequest", output = "http://businessLogic/FlightManagerInterface/getConcreteFlightsListResponse")
    public List<ConcreteFlight> getConcreteFlightsList();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getArrivalCitiesFrom", targetNamespace = "http://businessLogic/", className = "service.GetArrivalCitiesFrom")
    @ResponseWrapper(localName = "getArrivalCitiesFromResponse", targetNamespace = "http://businessLogic/", className = "service.GetArrivalCitiesFromResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/getArrivalCitiesFromRequest", output = "http://businessLogic/FlightManagerInterface/getArrivalCitiesFromResponse")
    public List<String> getArrivalCitiesFrom(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<service.ConcreteFlightContainer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDateConcreteFlightContainers", targetNamespace = "http://businessLogic/", className = "service.GetDateConcreteFlightContainers")
    @ResponseWrapper(localName = "getDateConcreteFlightContainersResponse", targetNamespace = "http://businessLogic/", className = "service.GetDateConcreteFlightContainersResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/getDateConcreteFlightContainersRequest", output = "http://businessLogic/FlightManagerInterface/getDateConcreteFlightContainersResponse")
    public List<ConcreteFlightContainer> getDateConcreteFlightContainers(
        @WebParam(name = "arg0", targetNamespace = "")
        Object arg0);

    /**
     * 
     * @return
     *     returns java.util.List<service.ConcreteFlightContainer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getContainerConcreteFlights", targetNamespace = "http://businessLogic/", className = "service.GetContainerConcreteFlights")
    @ResponseWrapper(localName = "getContainerConcreteFlightsResponse", targetNamespace = "http://businessLogic/", className = "service.GetContainerConcreteFlightsResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/getContainerConcreteFlightsRequest", output = "http://businessLogic/FlightManagerInterface/getContainerConcreteFlightsResponse")
    public List<ConcreteFlightContainer> getContainerConcreteFlights();

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<service.ConcreteFlightContainer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getConcreteFlightContainers", targetNamespace = "http://businessLogic/", className = "service.GetConcreteFlightContainers")
    @ResponseWrapper(localName = "getConcreteFlightContainersResponse", targetNamespace = "http://businessLogic/", className = "service.GetConcreteFlightContainersResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/getConcreteFlightContainersRequest", output = "http://businessLogic/FlightManagerInterface/getConcreteFlightContainersResponse")
    public List<ConcreteFlightContainer> getConcreteFlightContainers(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        Object arg2
    );

    /**
     * 
     * @param arg0
     * @return
     *     returns service.ConcreteFlight
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findConcreteFlight", targetNamespace = "http://businessLogic/", className = "service.FindConcreteFlight")
    @ResponseWrapper(localName = "findConcreteFlightResponse", targetNamespace = "http://businessLogic/", className = "service.FindConcreteFlightResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/findConcreteFlightRequest", output = "http://businessLogic/FlightManagerInterface/findConcreteFlightResponse")
    public ConcreteFlight findConcreteFlight(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns service.ConcreteFlight
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getConcreteFlight", targetNamespace = "http://businessLogic/", className = "service.GetConcreteFlight")
    @ResponseWrapper(localName = "getConcreteFlightResponse", targetNamespace = "http://businessLogic/", className = "service.GetConcreteFlightResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/getConcreteFlightRequest", output = "http://businessLogic/FlightManagerInterface/getConcreteFlightResponse")
    public ConcreteFlight getConcreteFlight(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<service.ConcreteFlight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getConcreteFlights", targetNamespace = "http://businessLogic/", className = "service.GetConcreteFlights")
    @ResponseWrapper(localName = "getConcreteFlightsResponse", targetNamespace = "http://businessLogic/", className = "service.GetConcreteFlightsResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/getConcreteFlightsRequest", output = "http://businessLogic/FlightManagerInterface/getConcreteFlightsResponse")
    public List<ConcreteFlight> getConcreteFlights(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        Object arg2);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "gordeHegaldia", targetNamespace = "http://businessLogic/", className = "service.GordeHegaldia")
    @ResponseWrapper(localName = "gordeHegaldiaResponse", targetNamespace = "http://businessLogic/", className = "service.GordeHegaldiaResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/gordeHegaldiaRequest", output = "http://businessLogic/FlightManagerInterface/gordeHegaldiaResponse")
    public void gordeHegaldia(
        @WebParam(name = "arg0", targetNamespace = "")
        ConcreteFlight arg0);

    /**
     * 
     * @return
     *     returns java.util.List<service.Flight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFlights", targetNamespace = "http://businessLogic/", className = "service.GetFlights")
    @ResponseWrapper(localName = "getFlightsResponse", targetNamespace = "http://businessLogic/", className = "service.GetFlightsResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/getFlightsRequest", output = "http://businessLogic/FlightManagerInterface/getFlightsResponse")
    public List<Flight> getFlights();

    /**
     * 
     * @param arg0
     * @return
     *     returns service.Flight
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFlight", targetNamespace = "http://businessLogic/", className = "service.GetFlight")
    @ResponseWrapper(localName = "getFlightResponse", targetNamespace = "http://businessLogic/", className = "service.GetFlightResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/getFlightRequest", output = "http://businessLogic/FlightManagerInterface/getFlightResponse")
    public Flight getFlight(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Object
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "toXMLGregorianCalendar", targetNamespace = "http://businessLogic/", className = "service.ToXMLGregorianCalendar")
    @ResponseWrapper(localName = "toXMLGregorianCalendarResponse", targetNamespace = "http://businessLogic/", className = "service.ToXMLGregorianCalendarResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/toXMLGregorianCalendarRequest", output = "http://businessLogic/FlightManagerInterface/toXMLGregorianCalendarResponse")
    public Object toXMLGregorianCalendar(
        @WebParam(name = "arg0", targetNamespace = "")
        XMLGregorianCalendar arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<service.ConcreteFlight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDateConcreteFlights", targetNamespace = "http://businessLogic/", className = "service.GetDateConcreteFlights")
    @ResponseWrapper(localName = "getDateConcreteFlightsResponse", targetNamespace = "http://businessLogic/", className = "service.GetDateConcreteFlightsResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/getDateConcreteFlightsRequest", output = "http://businessLogic/FlightManagerInterface/getDateConcreteFlightsResponse")
    public List<ConcreteFlight> getDateConcreteFlights(
        @WebParam(name = "arg0", targetNamespace = "")
        Object arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns service.ConcreteFlight
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "changeConcreteFlight", targetNamespace = "http://businessLogic/", className = "service.ChangeConcreteFlight")
    @ResponseWrapper(localName = "changeConcreteFlightResponse", targetNamespace = "http://businessLogic/", className = "service.ChangeConcreteFlightResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/changeConcreteFlightRequest", output = "http://businessLogic/FlightManagerInterface/changeConcreteFlightResponse")
    public ConcreteFlight changeConcreteFlight(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

    /**
     * 
     * @param arg0
     * @return
     *     returns service.ConcreteFlightContainer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getConcreteFlightContainer", targetNamespace = "http://businessLogic/", className = "service.GetConcreteFlightContainer")
    @ResponseWrapper(localName = "getConcreteFlightContainerResponse", targetNamespace = "http://businessLogic/", className = "service.GetConcreteFlightContainerResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/getConcreteFlightContainerRequest", output = "http://businessLogic/FlightManagerInterface/getConcreteFlightContainerResponse")
    public ConcreteFlightContainer getConcreteFlightContainer(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.Object
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "newDate", targetNamespace = "http://businessLogic/", className = "service.NewDate")
    @ResponseWrapper(localName = "newDateResponse", targetNamespace = "http://businessLogic/", className = "service.NewDateResponse")
    @Action(input = "http://businessLogic/FlightManagerInterface/newDateRequest", output = "http://businessLogic/FlightManagerInterface/newDateResponse")
    public Object newDate(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

}
